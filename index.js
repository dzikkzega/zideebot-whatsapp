const { Client, LocalAuth } = require('whatsapp-web.js');
const qrcode = require('qrcode-terminal');
const moment = require('moment');
const { getOpenMeteoWeather, getWeatherForecast } = require('./open-meteo-api');
const { chatWithGemini, generateCreative, translateText } = require('./gemini-ai');

// Konfigurasi delay
const DELAY_CONFIG = {
    // Delay untuk auto-reply normal (1-3 detik)
    autoReply: { min: 1000, max: 3000 },
    
    // Delay untuk broadcast (2-5 detik)
    broadcast: { min: 2000, max: 5000 },
    
    // Delay untuk command yang complex (2-4 detik)
    command: { min: 2000, max: 4000 },
    
    // Delay untuk sapaan (1-2 detik, lebih cepat)
    greeting: { min: 1000, max: 2000 },
    
    // Delay untuk grup management (1-3 detik)
    groupManagement: { min: 1000, max: 3000 }
};

// Inisialisasi client WhatsApp
const client = new Client({
    authStrategy: new LocalAuth({
        dataPath: './session'
    }),
    puppeteer: {
        headless: true, // Always headless in production
        args: [
            '--no-sandbox',
            '--disable-setuid-sandbox',
            '--disable-dev-shm-usage',
            '--disable-accelerated-2d-canvas',
            '--no-first-run',
            '--no-zygote',
            '--single-process',
            '--disable-gpu',
            '--disable-web-security',
            '--disable-features=VizDisplayCompositor'
        ],
        timeout: 60000
    }
});

// Event ketika QR code perlu di-scan
client.on('qr', (qr) => {
    console.log('üîç Scan QR Code ini dengan WhatsApp:');
    qrcode.generate(qr, { small: true });
    console.log('üí° Scan QR code di atas dengan WhatsApp di HP Anda');
});

// Event ketika loading
client.on('loading_screen', (percent, message) => {
    console.log('‚è≥ Loading:', percent, message);
});

// Event ketika authenticated
client.on('authenticated', () => {
    console.log('‚úÖ WhatsApp authenticated successfully!');
});

// Event ketika bot berhasil terhubung
client.on('ready', () => {
    console.log('‚úÖ Bot WhatsApp siap digunakan!');
    console.log('üì± Connected as:', client.info.wid.user);
});

// Event ketika bot disconnect
client.on('disconnected', (reason) => {
    console.log('‚ùå Bot disconnected:', reason);
    console.log('üîÑ Restarting in 5 seconds...');
    setTimeout(() => {
        process.exit(1);
    }, 5000);
});

// Event ketika ada authentication failure
client.on('auth_failure', (session) => {
    console.log('‚ùå Authentication failed:', session);
    console.log('üîÑ Please scan QR code again');
});

// Event untuk handle error
client.on('error', (error) => {
    console.error('‚ùå WhatsApp Client Error:', error);
});

// Initialize dengan error handling
console.log('üöÄ Initializing WhatsApp Bot...');
client.initialize().catch(error => {
    console.error('‚ùå Failed to initialize client:', error);
    process.exit(1);
});

// Start health check server untuk hosting
if (process.env.NODE_ENV === 'production') {
    require('./health-server');
}

// Event ketika ada pesan masuk
client.on('message', async (message) => {
    console.log(`üì® Pesan dari ${message.from}: ${message.body}`);
    
    // Auto-reply berdasarkan pesan
    await handleMessage(message);
});

// Event ketika ada pesan baru (termasuk pesan dari bot sendiri)
client.on('message_create', async (message) => {
    // Log semua pesan yang dibuat
    if (message.fromMe) {
        console.log(`üì§ Pesan terkirim ke ${message.to}: ${message.body}`);
    }
});

// Fungsi untuk delay natural (simulasi typing)
async function naturalDelay(min = 1000, max = 3000) {
    const delay = Math.random() * (max - min) + min;
    return new Promise(resolve => setTimeout(resolve, delay));
}

// Fungsi untuk delay berdasarkan tipe pesan
async function smartDelay(type = 'autoReply') {
    const config = DELAY_CONFIG[type] || DELAY_CONFIG.autoReply;
    return naturalDelay(config.min, config.max);
}

// ========== CALCULATOR BOT FUNCTIONS ==========
function calculateExpression(expression) {
    try {
        // Clean input
        let cleanExpression = expression.trim();
        
        // Replace common math symbols
        cleanExpression = cleanExpression.replace(/√ó/g, '*');
        cleanExpression = cleanExpression.replace(/√∑/g, '/');
        cleanExpression = cleanExpression.replace(/\^/g, '**');
        
        // Handle square root
        cleanExpression = cleanExpression.replace(/sqrt\(([^)]+)\)/g, 'Math.sqrt($1)');
        
        // Handle trigonometric functions (convert degrees to radians)
        cleanExpression = cleanExpression.replace(/sin\(([^)]+)\)/g, 'Math.sin($1 * Math.PI / 180)');
        cleanExpression = cleanExpression.replace(/cos\(([^)]+)\)/g, 'Math.cos($1 * Math.PI / 180)');
        cleanExpression = cleanExpression.replace(/tan\(([^)]+)\)/g, 'Math.tan($1 * Math.PI / 180)');
        
        // Handle logarithms
        cleanExpression = cleanExpression.replace(/log\(([^)]+)\)/g, 'Math.log10($1)');
        cleanExpression = cleanExpression.replace(/ln\(([^)]+)\)/g, 'Math.log($1)');
        
        // Handle pi and e
        cleanExpression = cleanExpression.replace(/pi/g, 'Math.PI');
        cleanExpression = cleanExpression.replace(/e/g, 'Math.E');
        
        // Validate expression (basic security check)
        if (!/^[0-9+\-*/().\s\*\*Math.sincostandlogsqrtPIE,]+$/.test(cleanExpression)) {
            return '‚ùå Error: Karakter tidak valid dalam rumus';
        }
        
        // Calculate result
        const result = eval(cleanExpression);
        
        if (isNaN(result)) {
            return '‚ùå Error: Hasil tidak valid';
        }
        
        if (!isFinite(result)) {
            return '‚ùå Error: Hasil tidak terbatas';
        }
        
        // Format result
        return Number(result.toFixed(10)).toString();
        
    } catch (error) {
        return '‚ùå Error: Rumus tidak valid atau tidak dapat dihitung';
    }
}

// Fungsi untuk menangani pesan masuk
async function handleMessage(message) {
    const messageBody = message.body.toLowerCase();
    const sender = message.from;
    
    // Debug log untuk semua pesan
    console.log(`üì® Processing message: "${messageBody}" from ${sender}`);
    console.log(`üìç Is Group: ${message.from.includes('@g.us')}`);
    
    try {
        // Command: tolong
        if (messageBody === 'tolong' || messageBody === 'bantuan' || messageBody === 'menu') {
            await smartDelay('command');
            await message.reply(`
ü§ñ *Bot WhatsApp Help*

Kata kunci yang tersedia:
‚Ä¢ tolong / bantuan / menu - Tampilkan menu bantuan
‚Ä¢ waktu / jam - Tampilkan waktu sekarang
‚Ä¢ info / tentang - Informasi tentang bot
‚Ä¢ ping / test - Test koneksi bot
‚Ä¢ echo [text] - Bot akan mengulangi teks Anda

üßÆ **Calculator Bot:**
‚Ä¢ kalkulator - Menu kalkulator
‚Ä¢ hitung [rumus] - Hitung matematika
‚Ä¢ calc [rumus] - Sama dengan hitung

üå§Ô∏è **Weather Bot:**
‚Ä¢ cuaca [kota] - Info cuaca real-time
‚Ä¢ prakiraan [kota] - Prakiraan 6 jam
‚Ä¢ weather [city] - English version

‚ùì **FAQ Bot:**
‚Ä¢ faq - Daftar pertanyaan umum
‚Ä¢ jam buka, alamat, harga, kontak, owner, dll

ü§ñ **AI Bot (Gemini):**
‚Ä¢ ai [pertanyaan] - Chat dengan AI
‚Ä¢ pantun [tema] - Buat pantun lucu
‚Ä¢ motivasi [tema] - Kata-kata motivasi
‚Ä¢ terjemah [text] - Terjemahan bahasa
‚Ä¢ tips [topik] - Tips praktis

üë• **Group Management:**
‚Ä¢ open / op - Buka grup (admin only)
‚Ä¢ close / cl - Tutup grup (admin only)

**Contoh penggunaan:**
‚Ä¢ echo Halo dunia
‚Ä¢ hitung 5 + 3 * 2
‚Ä¢ cuaca Jakarta
‚Ä¢ prakiraan Bandung
‚Ä¢ ai siapa kamu?
‚Ä¢ pantun programming
‚Ä¢ motivasi belajar
‚Ä¢ terjemah hello world
‚Ä¢ faq
            `);
        }
        
        // Command: waktu/jam
        else if (messageBody === 'waktu' || messageBody === 'jam' || messageBody === 'time') {
            await smartDelay('command');
            const currentTime = moment().format('YYYY-MM-DD HH:mm:ss');
            await message.reply(`üïê Waktu sekarang: ${currentTime}`);
        }
        
        // Command: info/tentang
        else if (messageBody === 'info' || messageBody === 'tentang' || messageBody === 'about') {
            await smartDelay('command');
            await message.reply(`
ü§ñ *Informasi Bot*

‚Ä¢ Nama: WhatsApp Bot
‚Ä¢ Versi: 1.0.0
‚Ä¢ Status: Online ‚úÖ
‚Ä¢ Framework: whatsapp-web.js
            `);
        }
        
        // Command: ping/test
        else if (messageBody === 'ping' || messageBody === 'test' || messageBody === 'tes') {
            await smartDelay('autoReply');
            
            // Add group debug info
            if (message.from.includes('@g.us')) {
                const chat = await message.getChat();
                await message.reply(`üèì Pong! Bot sedang online.
                
üìç Lokasi: Grup "${chat.name}"
üÜî Chat ID: ${message.from}
üë§ Dari: ${(await message.getContact()).pushname || 'Unknown'}
ü§ñ Bot Status: Online ‚úÖ`);
            } else {
                await message.reply('üèì Pong! Bot sedang online.');
            }
        }
        
        // Command: echo
        else if (messageBody.startsWith('echo ')) {
            await smartDelay('autoReply');
            const textToEcho = message.body.substring(5); // Ambil text setelah "echo "
            await message.reply(`üîÑ Echo: ${textToEcho}`);
        }
        
        // ========== CALCULATOR BOT ==========
        // Command: hitung/calc
        else if (messageBody.startsWith('hitung ') || messageBody.startsWith('calc ')) {
            await smartDelay('command');
            const expression = messageBody.startsWith('hitung ') ? 
                message.body.substring(7) : message.body.substring(5);
            
            const result = calculateExpression(expression);
            await message.reply(`üßÆ **Kalkulator**\n\n${expression} = **${result}**`);
        }
        
        // Command: kalkulator menu
        else if (messageBody === 'kalkulator' || messageBody === 'calc') {
            await smartDelay('command');
            await message.reply(`
üßÆ **Kalkulator Bot**

Cara penggunaan:
‚Ä¢ hitung 2 + 3
‚Ä¢ calc 10 * 5
‚Ä¢ hitung 100 / 4
‚Ä¢ calc 2^3 (pangkat)
‚Ä¢ hitung sqrt(16) (akar kuadrat)
‚Ä¢ calc sin(90) (trigonometri)

Operasi yang didukung:
‚ûï Penjumlahan (+)
‚ûñ Pengurangan (-)
‚úñÔ∏è Perkalian (*)
‚ûó Pembagian (/)
üî¢ Pangkat (^)
‚àö Akar kuadrat (sqrt)
üìê Trigonometri (sin, cos, tan)
üìä Logaritma (log, ln)

Contoh: hitung 5 + 3 * 2
            `);
        }
        
        // ========== WEATHER BOT ==========
        // Command: cuaca
        else if (messageBody.startsWith('cuaca ') || messageBody.startsWith('weather ')) {
            await smartDelay('command');
            const city = messageBody.startsWith('cuaca ') ? 
                message.body.substring(6) : message.body.substring(8);
            
            const weatherInfo = await getOpenMeteoWeather(city);
            await message.reply(weatherInfo);
        }
        
        // Command: prakiraan cuaca
        else if (messageBody.startsWith('prakiraan ')) {
            await smartDelay('command');
            const city = message.body.substring(10);
            
            const forecastInfo = await getWeatherForecast(city);
            await message.reply(forecastInfo);
        }
        
        // Command: cuaca menu
        else if (messageBody === 'cuaca' || messageBody === 'weather') {
            await smartDelay('command');
            await message.reply(`
üå§Ô∏è **Weather Bot - Open-Meteo API**

**Cara penggunaan:**
‚Ä¢ cuaca [kota] - Info cuaca real-time
‚Ä¢ weather [city] - English version
‚Ä¢ prakiraan [kota] - Prakiraan 6 jam

**Fitur Real-time:**
üå°Ô∏è Suhu saat ini & terasa seperti
üíß Kelembaban udara
üí® Kecepatan & arah angin
üåßÔ∏è Curah hujan
‚òÅÔ∏è Kondisi cuaca detail
üåÖ Waktu sunrise/sunset

**Kota Popular:**
üáÆüá© Jakarta, Bandung, Surabaya, Bali
üåç Singapore, Tokyo, London, New York

**Contoh:**
‚Ä¢ cuaca Jakarta
‚Ä¢ weather Singapore
‚Ä¢ prakiraan Bandung

üí° **100% Gratis & Real-time!**
Powered by Open-Meteo API

Contoh: cuaca Surabaya
            `);
        }
        
        // ========== AI BOT (GEMINI) ==========
        // Command: ai (general chat)
        else if (messageBody.startsWith('ai ')) {
            await smartDelay('command');
            const userQuestion = message.body.substring(3);
            
            const aiResponse = await chatWithGemini(userQuestion);
            await message.reply(aiResponse);
        }
        
        // Command: pantun
        else if (messageBody.startsWith('pantun ')) {
            await smartDelay('command');
            const topic = message.body.substring(7);
            
            const pantunResponse = await generateCreative(topic, 'pantun');
            await message.reply(`üé≠ **Pantun tentang ${topic}:**\n\n${pantunResponse}`);
        }
        
        // Command: motivasi
        else if (messageBody.startsWith('motivasi ')) {
            await smartDelay('command');
            const topic = message.body.substring(9);
            
            const motivasiResponse = await generateCreative(topic, 'motivasi');
            await message.reply(`üí™ **Motivasi untuk ${topic}:**\n\n${motivasiResponse}`);
        }
        
        // Command: terjemah
        else if (messageBody.startsWith('terjemah ')) {
            await smartDelay('command');
            const textToTranslate = message.body.substring(9);
            
            const translateResponse = await translateText(textToTranslate, 'english');
            await message.reply(`üåê **Terjemahan:**\n\n${translateResponse}`);
        }
        
        // Command: tips
        else if (messageBody.startsWith('tips ')) {
            await smartDelay('command');
            const topic = message.body.substring(5);
            
            const tipsResponse = await generateCreative(topic, 'tips');
            await message.reply(`üí° **Tips tentang ${topic}:**\n\n${tipsResponse}`);
        }
        
        // Command: AI menu
        else if (messageBody === 'ai' || messageBody === 'gemini') {
            await smartDelay('command');
            await message.reply(`
ü§ñ **AI Bot - Powered by Gemini**

**Cara penggunaan:**
‚Ä¢ ai [pertanyaan] - Chat dengan AI
‚Ä¢ pantun [tema] - Buat pantun lucu
‚Ä¢ motivasi [tema] - Kata motivasi
‚Ä¢ terjemah [text] - Terjemahan
‚Ä¢ tips [topik] - Tips praktis

**Fitur AI:**
üí¨ Percakapan natural dalam bahasa Indonesia
üé≠ Kreativitas pantun dan puisi
üí™ Motivasi dan inspirasi
üåê Terjemahan multi-bahasa
üí° Tips dan saran praktis
üß† Pengetahuan umum

**Contoh penggunaan:**
‚Ä¢ ai Jelaskan tentang AI
‚Ä¢ pantun programming
‚Ä¢ motivasi belajar
‚Ä¢ terjemah hello world
‚Ä¢ tips belajar efektif

‚ö° **Respon cepat & akurat!**
Powered by Google Gemini AI

Contoh: ai Apa itu teknologi blockchain?
            `);
        }
        
        // ========== FAQ BOT ==========
        // FAQ responses
        else if (messageBody.includes('jam buka') || messageBody.includes('open hours')) {
            await smartDelay('autoReply');
            await message.reply('üïê **Jam Buka Layanan:**\n\nSenin - Jumat: 08:00 - 17:00 WIB\nSabtu: 08:00 - 12:00 WIB\nMinggu: Libur\n\nüìû Untuk emergency: 24/7');
        }
        
        else if (messageBody.includes('alamat') || messageBody.includes('lokasi') || messageBody.includes('address')) {
            await smartDelay('autoReply');
            await message.reply('üìç **Alamat Kami:**\n\nJl. Contoh No. 123\nJakarta Selatan 12345\nIndonesia\n\nüöó Dekat dengan stasiun MRT\nüÖøÔ∏è Parkir tersedia');
        }
        
        else if (messageBody.includes('harga') || messageBody.includes('price') || messageBody.includes('tarif')) {
            await smartDelay('autoReply');
            await message.reply('üí∞ **Informasi Harga:**\n\nPaket Basic: Rp 100.000\nPaket Standard: Rp 250.000\nPaket Premium: Rp 500.000\n\nüéâ Promo bulan ini: Diskon 20%!\nüìû Hubungi CS untuk detail lengkap');
        }
        
        else if (messageBody.includes('kontak') || messageBody.includes('contact') || messageBody.includes('hubungi')) {
            await smartDelay('autoReply');
            await message.reply('üìû **Kontak Kami:**\n\nCustomer Service: 0800-1234-5678\nWhatsApp: 0812-3456-7890\nEmail: info@example.com\n\nüí¨ Atau chat langsung di sini!\n‚è∞ Respon dalam 1x24 jam');
        }
        
        else if (messageBody.includes('cara order') || messageBody.includes('how to order') || messageBody.includes('pesan')) {
            await smartDelay('autoReply');
            await message.reply('üõí **Cara Order:**\n\n1Ô∏è‚É£ Pilih paket yang diinginkan\n2Ô∏è‚É£ Isi form pemesanan\n3Ô∏è‚É£ Lakukan pembayaran\n4Ô∏è‚É£ Kirim bukti transfer\n5Ô∏è‚É£ Pesanan diproses\n\nüìù Ketik "order" untuk mulai pemesanan');
        }
        
        else if (messageBody.includes('pembayaran') || messageBody.includes('payment') || messageBody.includes('bayar')) {
            await smartDelay('autoReply');
            await message.reply('üí≥ **Metode Pembayaran:**\n\nüè¶ Transfer Bank:\n‚Ä¢ BCA: 1234567890\n‚Ä¢ Mandiri: 1234567890\n‚Ä¢ BNI: 1234567890\n\nüì± E-Wallet:\n‚Ä¢ OVO: 0812-3456-7890\n‚Ä¢ GoPay: 0812-3456-7890\n‚Ä¢ DANA: 0812-3456-7890\n\nüí° Konfirmasi pembayaran ke CS');
        }
        
        else if (messageBody.includes('promo') || messageBody.includes('diskon') || messageBody.includes('discount')) {
            await smartDelay('autoReply');
            await message.reply('üéâ **Promo Bulan Ini:**\n\n‚ö° Flash Sale: 30% OFF\nüéä Promo Member Baru: 20% OFF\nüíé Paket Premium: Gratis konsultasi\nüî• Bundle Deal: Beli 2 Gratis 1\n\nüìÖ Berlaku sampai akhir bulan\nüèÉ‚Äç‚ôÇÔ∏è Buruan, slot terbatas!');
        }
        
        else if (messageBody.includes('owner') || messageBody === 'owner') {
            await smartDelay('autoReply');
            await message.reply(`üë§ **Kontak Owner**

üì± **WhatsApp Owner:**
wa.me/6282311727134

üìû **Nomor Langsung:**
+62 823-1172-7134

üí¨ **Untuk:**
‚Ä¢ Pertanyaan khusus
‚Ä¢ Kerjasama bisnis  
‚Ä¢ Saran & masukan
‚Ä¢ Keluhan layanan
‚Ä¢ Partnership

‚è∞ **Jam Operasional Owner:**
Senin - Sabtu: 09:00 - 21:00 WIB
Minggu: 10:00 - 18:00 WIB

üí° Silakan hubungi langsung untuk urusan penting!`);
        }
        
        // Command: faq menu
        else if (messageBody === 'faq' || messageBody === 'pertanyaan') {
            await smartDelay('command');
            await message.reply(`
‚ùì **FAQ - Pertanyaan Umum**

Ketik salah satu kata kunci:
‚Ä¢ jam buka - Info jam operasional
‚Ä¢ alamat - Lokasi kantor
‚Ä¢ harga - Daftar harga layanan
‚Ä¢ kontak - Informasi kontak
‚Ä¢ owner - Kontak owner langsung
‚Ä¢ cara order - Panduan pemesanan
‚Ä¢ pembayaran - Metode pembayaran
‚Ä¢ promo - Promo terbaru

üí° Atau langsung tanya apa yang ingin Anda ketahui!
            `);
        }
        
        // Command: debug group (for testing)
        else if (messageBody === 'debug' || messageBody === 'debuggroup') {
            console.log(`üîç Debug command received from: ${message.from}`);
            
            if (message.from.includes('@g.us')) {
                const chat = await message.getChat();
                const contact = await message.getContact();
                
                // Get more detailed group information
                const participants = await chat.participants;
                const botNumber = client.info.wid.user;
                const isAdmin = participants.some(p => p.id.user === botNumber && p.isAdmin);
                
                console.log(`üîç Group Debug Details:`);
                console.log(`- Group ID: ${message.from}`);
                console.log(`- Group Name: ${chat.name}`);
                console.log(`- Is Group: ${chat.isGroup}`);
                console.log(`- Bot Number: ${botNumber}`);
                console.log(`- Bot is Admin: ${isAdmin}`);
                console.log(`- Participants Count: ${participants.length}`);
                
                await message.reply(`üêõ **Detailed Debug Info**

üìç **Chat Info:**
‚Ä¢ Type: ${chat.isGroup ? 'Group ‚úÖ' : 'Private ‚ùå'}
‚Ä¢ ID: ${message.from}
‚Ä¢ Name: ${chat.name || 'N/A'}
‚Ä¢ Admin Only Messages: ${chat.groupMetadata?.restrict || 'N/A'}

üë§ **User Info:**
‚Ä¢ Name: ${contact.pushname || contact.name || 'Unknown'}
‚Ä¢ Number: ${contact.number || 'Unknown'}

ü§ñ **Bot Status:**
‚Ä¢ Can reply: ‚úÖ
‚Ä¢ In group: ${message.from.includes('@g.us') ? '‚úÖ' : '‚ùå'}
‚Ä¢ Group object: ${chat.isGroup ? '‚úÖ' : '‚ùå'}
‚Ä¢ Bot is Admin: ${isAdmin ? '‚úÖ' : '‚ùå'}
‚Ä¢ Participants: ${participants.length}

üí° **Next Steps:**
${!isAdmin ? '‚ö†Ô∏è Bot perlu dijadikan ADMIN dulu!' : '‚úÖ Bot sudah admin, coba: open atau close'}

**Test Commands:**
‚Ä¢ open - Buka grup
‚Ä¢ close - Tutup grup
‚Ä¢ op - Singkatan open
‚Ä¢ cl - Singkatan close`);
            } else {
                await message.reply(`üêõ **Debug Info - Private Chat**

üìç This is a private chat, not a group
ü§ñ Bot is working fine
üí° Group commands only work in groups

‚ö†Ô∏è **Important:**
Perintah open/close HANYA bekerja di grup!
Silakan coba di grup, bukan chat pribadi.

üìù **Cara Test di Grup:**
1. Tambahkan bot ke grup
2. Jadikan bot sebagai admin
3. Kirim 'debug' di grup
4. Lalu coba 'open' atau 'close'`);
            }
        }
        
        // ========== GROUP MANAGEMENT ==========
        // Command: open group (with enhanced debugging)
        else if (messageBody === 'open' || messageBody === 'op') {
            console.log(`üîç OPEN COMMAND RECEIVED!`);
            console.log(`üìç Message from: ${message.from}`);
            console.log(`üè¢ Contains @g.us: ${message.from.includes('@g.us')}`);
            console.log(`üî¢ Message ID: ${message.id._serialized}`);
            console.log(`üë§ From user: ${message.author || message.from}`);
            
            // First check: Is this from a group?
            if (!message.from.includes('@g.us')) {
                console.log('‚ùå REJECT: Command sent from private chat, not group');
                await message.reply(`‚ö†Ô∏è **Perintah Grup**

üö´ Perintah "open" hanya bisa digunakan di GRUP!

üì± Cara menggunakan:
1. Tambahkan bot ke grup
2. Jadikan bot sebagai admin
3. Kirim perintah "open" di grup (bukan chat pribadi)

üí° Saat ini Anda kirim dari chat pribadi.
üÜî Chat ID: ${message.from}`);
                return;
            }
            
            console.log('‚úÖ GROUP CHECK PASSED - Getting chat object...');
            
            try {
                const chat = await message.getChat();
                const contact = await message.getContact();
                
                console.log(`üë• Group name: ${chat.name}`);
                console.log(`üë§ User: ${contact.pushname || 'Unknown'}`);
                console.log(`üîí Is Group object: ${chat.isGroup}`);
                console.log(`üìä Group metadata available: ${!!chat.groupMetadata}`);
                
                if (chat.isGroup) {
                    console.log('‚úÖ GROUP OBJECT CONFIRMED');
                    
                    // Check if bot is admin
                    try {
                        const participants = await chat.participants;
                        const botNumber = client.info.wid.user;
                        const isAdmin = participants.some(p => p.id.user === botNumber && p.isAdmin);
                        
                        console.log(`ü§ñ Bot number: ${botNumber}`);
                        console.log(`üë• Participants count: ${participants.length}`);
                        console.log(`ÔøΩ Bot is admin: ${isAdmin}`);
                        
                        if (!isAdmin) {
                            console.log('‚ùå REJECT: Bot is not admin');
                            await message.reply(`‚ùå **Bot Belum Admin**

üîë Bot perlu dijadikan admin untuk mengubah pengaturan grup

üìù **Cara menjadikan bot admin:**
1. Buka info grup
2. Tap "Edit"
3. Tap "Add participant"
4. Pilih bot dari daftar
5. Tap icon admin (üëë) di samping nama bot
6. Coba lagi perintah "open"

ü§ñ Bot saat ini: Member biasa
üëë Diperlukan: Admin dengan izin edit grup`);
                            return;
                        }
                        
                        console.log('üîÑ ATTEMPTING TO OPEN GROUP...');
                        await chat.setMessagesAdminsOnly(false);
                        console.log('‚úÖ GROUP OPENED SUCCESSFULLY');
                        
                        await smartDelay('groupManagement');
                        
                        // Format tanggal dan waktu Indonesia
                        const now = new Date();
                        const dateOptions = { 
                            weekday: 'long', 
                            year: 'numeric', 
                            month: 'long', 
                            day: 'numeric',
                            timeZone: 'Asia/Jakarta'
                        };
                        const timeOptions = {
                            hour: '2-digit',
                            minute: '2-digit',
                            second: '2-digit',
                            timeZone: 'Asia/Jakarta'
                        };
                        
                        const dateStr = now.toLocaleDateString('id-ID', dateOptions);
                        const timeStr = now.toLocaleTimeString('id-ID', timeOptions);
                        
                        await message.reply(`*GROUP OPEN* ~ ZideeBot

Group *${chat.name}* Telah Di Buka Oleh @${contact.pushname || contact.name || 'Admin'}

üìÜ ${dateStr}
‚è∞ ${timeStr} WIB

ÿ®Ÿêÿ≥ŸíŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÖŸê ÿßŸÑŸÑŸáŸê ÿßŸÑÿ±ŸéŸëÿ≠ŸíŸÖŸéŸÜŸê ÿßŸÑÿ±ŸéŸëÿ≠ŸêŸäŸíŸÖŸê

Open guys, jangan lupa awali hari dengan senyuman semoga dilancarkan urusan ‚ú®`);
                        
                        console.log(`üìñ SUCCESS: Group "${chat.name}" opened by ${contact.pushname}`);
                        
                    } catch (permissionError) {
                        console.error('‚ùå PERMISSION ERROR:', permissionError);
                        await message.reply(`‚ùå **Gagal Membuka Grup**

üîë Bot tidak memiliki izin yang cukup

ÔøΩ **Troubleshooting:**
1. Pastikan bot adalah admin
2. Berikan izin "Edit group info"
3. Restart bot jika perlu
4. Coba lagi

‚ö†Ô∏è Error: ${permissionError.message || 'Unknown error'}`);
                    }
                } else {
                    console.log('‚ùå REJECT: Not recognized as group object');
                    await message.reply(`‚ö†Ô∏è **Error Grup**

Tidak dikenali sebagai grup oleh WhatsApp API

üîß **Coba:**
1. Restart bot
2. Pastikan di grup yang benar
3. Kirim 'debug' untuk info detail

üÜî ID: ${message.from}
üîç Detected as: ${chat.isGroup ? 'Group' : 'Not Group'}`);
                }
            } catch (error) {
                console.error('‚ùå CRITICAL ERROR in open command:', error);
                await message.reply(`‚ùå **Error Sistem**

Terjadi kesalahan saat memproses perintah

üîß **Info Error:**
${error.message || 'Unknown error'}

üìû Hubungi admin bot jika masalah berlanjut`);
            }
        }
        
        // Command: close group (with enhanced debugging)
        else if (messageBody === 'close' || messageBody === 'cl') {
            console.log(`üîç CLOSE COMMAND RECEIVED!`);
            console.log(`üìç Message from: ${message.from}`);
            console.log(`üè¢ Contains @g.us: ${message.from.includes('@g.us')}`);
            console.log(`üî¢ Message ID: ${message.id._serialized}`);
            console.log(`üë§ From user: ${message.author || message.from}`);
            
            // First check: Is this from a group?
            if (!message.from.includes('@g.us')) {
                console.log('‚ùå REJECT: Command sent from private chat, not group');
                await message.reply(`‚ö†Ô∏è **Perintah Grup**

üö´ Perintah "close" hanya bisa digunakan di GRUP!

üì± Cara menggunakan:
1. Tambahkan bot ke grup
2. Jadikan bot sebagai admin
3. Kirim perintah "close" di grup (bukan chat pribadi)

üí° Saat ini Anda kirim dari chat pribadi.
üÜî Chat ID: ${message.from}`);
                return;
            }
            
            console.log('‚úÖ GROUP CHECK PASSED - Getting chat object...');
            
            try {
                const chat = await message.getChat();
                const contact = await message.getContact();
                
                console.log(`üë• Group name: ${chat.name}`);
                console.log(`üë§ User: ${contact.pushname || 'Unknown'}`);
                console.log(`üîí Is Group object: ${chat.isGroup}`);
                console.log(`üìä Group metadata available: ${!!chat.groupMetadata}`);
                
                if (chat.isGroup) {
                    console.log('‚úÖ GROUP OBJECT CONFIRMED');
                    
                    // Check if bot is admin
                    try {
                        const participants = await chat.participants;
                        const botNumber = client.info.wid.user;
                        const isAdmin = participants.some(p => p.id.user === botNumber && p.isAdmin);
                        
                        console.log(`ü§ñ Bot number: ${botNumber}`);
                        console.log(`üë• Participants count: ${participants.length}`);
                        console.log(`ÔøΩ Bot is admin: ${isAdmin}`);
                        
                        if (!isAdmin) {
                            console.log('‚ùå REJECT: Bot is not admin');
                            await message.reply(`‚ùå **Bot Belum Admin**

üîë Bot perlu dijadikan admin untuk mengubah pengaturan grup

üìù **Cara menjadikan bot admin:**
1. Buka info grup
2. Tap "Edit"
3. Tap "Add participant"
4. Pilih bot dari daftar
5. Tap icon admin (üëë) di samping nama bot
6. Coba lagi perintah "close"

ü§ñ Bot saat ini: Member biasa
üëë Diperlukan: Admin dengan izin edit grup`);
                            return;
                        }
                        
                        console.log('üîÑ ATTEMPTING TO CLOSE GROUP...');
                        await chat.setMessagesAdminsOnly(true);
                        console.log('‚úÖ GROUP CLOSED SUCCESSFULLY');
                        
                        await smartDelay('groupManagement');
                        
                        // Format tanggal dan waktu Indonesia
                        const now = new Date();
                        const dateOptions = { 
                            weekday: 'long', 
                            year: 'numeric', 
                            month: 'long', 
                            day: 'numeric',
                            timeZone: 'Asia/Jakarta'
                        };
                        const timeOptions = {
                            hour: '2-digit',
                            minute: '2-digit',
                            second: '2-digit',
                            timeZone: 'Asia/Jakarta'
                        };
                        
                        const dateStr = now.toLocaleDateString('id-ID', dateOptions);
                        const timeStr = now.toLocaleTimeString('id-ID', timeOptions);
                        
                        await message.reply(`*GROUP CLOSE* ~ ZideeBot

Group *${chat.name}* Telah Di Tutup Oleh @${contact.pushname || contact.name || 'Admin'}

üìÜ ${dateStr}
‚è∞ ${timeStr} WIB
ÿßŸéŸÑŸíÿ≠ŸéŸÖŸíÿØŸè ŸÑŸêŸÑŸéŸëŸáŸê ÿ±Ÿéÿ®ŸêŸë ÿßŸÑŸíÿπŸéÿßŸÑŸéŸÖŸêŸäŸÜŸé

Terimakasih atas orderan hari ini, semoga besok lebih laris untuk kita semua, aamiin... ‚ú®`);
                        
                        console.log(`üìï SUCCESS: Group "${chat.name}" closed by ${contact.pushname}`);
                        
                    } catch (permissionError) {
                        console.error('‚ùå PERMISSION ERROR:', permissionError);
                        await message.reply(`‚ùå **Gagal Menutup Grup**

üîë Bot tidak memiliki izin yang cukup

ÔøΩ **Troubleshooting:**
1. Pastikan bot adalah admin
2. Berikan izin "Edit group info"
3. Restart bot jika perlu
4. Coba lagi

‚ö†Ô∏è Error: ${permissionError.message || 'Unknown error'}`);
                    }
                } else {
                    console.log('‚ùå REJECT: Not recognized as group object');
                    await message.reply(`‚ö†Ô∏è **Error Grup**

Tidak dikenali sebagai grup oleh WhatsApp API

üîß **Coba:**
1. Restart bot
2. Pastikan di grup yang benar
3. Kirim 'debug' untuk info detail

üÜî ID: ${message.from}
üîç Detected as: ${chat.isGroup ? 'Group' : 'Not Group'}`);
                }
            } catch (error) {
                console.error('‚ùå CRITICAL ERROR in close command:', error);
                await message.reply(`‚ùå **Error Sistem**

Terjadi kesalahan saat memproses perintah

üîß **Info Error:**
${error.message || 'Unknown error'}

üìû Hubungi admin bot jika masalah berlanjut`);
            }
        }
        
        // Auto-reply untuk sapaan umum
        else if (messageBody.includes('bot') || messageBody.includes('hai') || messageBody.includes('hello')) {
            await smartDelay('greeting');
            await message.reply('Haii, aku adalah Zideebot. Ada yang bisa aku bantu?');
        }
        
        // Auto-reply untuk ucapan terima kasih
        else if (messageBody.includes('terima kasih') || messageBody.includes('thanks') || messageBody.includes('thx')) {
            await smartDelay('greeting');
            await message.reply('üôè Sama-sama! Senang bisa membantu Anda.');
        }
        
        // Default reply untuk pesan yang tidak dikenali
        else {
            // Uncomment baris di bawah jika ingin bot membalas semua pesan
            // await message.reply('ü§î Maaf, saya tidak mengerti pesan Anda. Ketik "tolong" untuk bantuan.');
        }
        
    } catch (error) {
        console.error('‚ùå Error handling message:', error);
        await message.reply('‚ö†Ô∏è Terjadi kesalahan saat memproses pesan Anda.');
    }
}

// Fungsi untuk mengirim pesan ke nomor tertentu
async function sendMessage(phoneNumber, message) {
    try {
        const chatId = phoneNumber.includes('@c.us') ? phoneNumber : `${phoneNumber}@c.us`;
        await client.sendMessage(chatId, message);
        console.log(`üì§ Pesan berhasil dikirim ke ${phoneNumber}`);
    } catch (error) {
        console.error('‚ùå Error sending message:', error);
    }
}

// Fungsi untuk broadcast pesan ke multiple nomor
async function broadcastMessage(phoneNumbers, message) {
    console.log(`üì¢ Memulai broadcast ke ${phoneNumbers.length} nomor...`);
    
    for (const phoneNumber of phoneNumbers) {
        try {
            await sendMessage(phoneNumber, message);
            // Delay random 2-5 detik untuk menghindari spam detection
            const delay = Math.random() * 3000 + 2000; // 2-5 detik
            console.log(`‚è≥ Menunggu ${Math.round(delay/1000)} detik sebelum pesan berikutnya...`);
            await new Promise(resolve => setTimeout(resolve, delay));
        } catch (error) {
            console.error(`‚ùå Error broadcasting to ${phoneNumber}:`, error);
        }
    }
    
    console.log('‚úÖ Broadcast selesai!');
}

// Handle graceful shutdown
process.on('SIGINT', async () => {
    console.log('\nüõë Shutting down bot...');
    try {
        await client.destroy();
    } catch (error) {
        console.log('Error during shutdown:', error);
    }
    process.exit(0);
});

process.on('SIGTERM', async () => {
    console.log('\nüõë Received SIGTERM. Shutting down bot...');
    try {
        await client.destroy();
    } catch (error) {
        console.log('Error during shutdown:', error);
    }
    process.exit(0);
});

// Handle uncaught exceptions
process.on('uncaughtException', (error) => {
    console.error('‚ùå Uncaught Exception:', error);
    process.exit(1);
});

process.on('unhandledRejection', (reason, promise) => {
    console.error('‚ùå Unhandled Rejection at:', promise, 'reason:', reason);
    process.exit(1);
});

// Export functions untuk penggunaan di file lain
module.exports = {
    client,
    sendMessage,
    broadcastMessage
};
